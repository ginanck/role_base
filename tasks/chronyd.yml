---

- name: Generate /etc/chrony.conf
  ansible.builtin.template:
    src: chrony.conf.j2
    dest: "/etc/chrony.conf"
    owner: root
    group: root
    mode: "0644"
    backup: true
  register: chrony_conf_result
  when: base_chrony_config is defined

- name: Generate /etc/chrony.keys
  ansible.builtin.template:
    src: chrony.keys.j2
    dest: "/etc/chrony.keys"
    owner: root
    group: root
    mode: "0644"
    backup: true
  register: chrony_keys_result
  when: base_chrony_keys is defined

- name: Create systemd drop-in directory for chrony (container only)
  ansible.builtin.file:
    path: /etc/systemd/system/chrony.service.d
    state: directory
    owner: root
    group: root
    mode: "0755"
  when: ansible_virtualization_type in ['container', 'docker']

- name: Force -x option for chrony in containers (Ubuntu 20.04 workaround)
  ansible.builtin.copy:
    dest: /etc/systemd/system/chrony.service.d/override.conf
    content: |
      [Service]
      ExecStart=
      ExecStart=/usr/sbin/chronyd -x
    owner: root
    group: root
    mode: "0644"
  when: ansible_virtualization_type in ['container', 'docker']

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
  when: ansible_virtualization_type in ['container', 'docker']

- name: Start chrony
  ansible.builtin.systemd:
    name: chrony
    state: started
    enabled: true
    daemon_reload: true
  when: ansible_virtualization_type not in ['container', 'docker']
